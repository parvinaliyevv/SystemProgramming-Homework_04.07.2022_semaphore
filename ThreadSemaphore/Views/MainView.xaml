<Window x:Class="ThreadSemaphore.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        ResizeMode="NoResize" WindowStyle="None" AllowsTransparency="True" Background="Transparent"
        FontFamily="Calibri" Foreground="GhostWhite" Height="400" Width="700" mc:Ignorable="d">

    <Border Background="#28282e" CornerRadius="7">

        <Grid>

            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Border Background="#232123" CornerRadius="7, 7, 0, 0" MouseDown="DragWindow_MouseDown">
                <DockPanel LastChildFill="False">

                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}" Content="{materialDesign:PackIcon Kind=Close}" Foreground="#646365" Background="Transparent" BorderBrush="Transparent" Height="40" Width="40" Margin="0, 0, 10, 0" Click="AppClose_ButtonClicked" DockPanel.Dock="Right"/>

                    <TextBlock VerticalAlignment="Center" FontSize="30" Margin="20, 0, 0, 0">
                    
                        <Run Text="●" Foreground="#ee6a5f"/>
                        <Run Text="●" Foreground="#f5be51"/>
                        <Run Text="●" Foreground="#63c757"/>

                    </TextBlock>

                </DockPanel>
            </Border>

            <Grid Margin="10" Grid.Row="1">

                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition MaxHeight="80"/>
                </Grid.RowDefinitions>

                <Grid>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0">

                        <TextBlock Text="Working Threads" TextAlignment="Center" Margin="5"/>

                        <ListBox Background="LightGray" Height="200" Width="220" ItemsSource="{Binding WorkingThreads}">

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>

                        </ListBox>

                    </StackPanel>

                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1">

                        <TextBlock Text="Waiting Threads" TextAlignment="Center" Margin="5"/>

                        <ListBox Name="wt" Background="LightGray" Height="200" Width="220" ItemsSource="{Binding WaitingThreads}">

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding DeleteWaitingThreadCommand}" CommandParameter="{Binding ElementName=wt, Path=SelectedItem}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </ListBox>

                    </StackPanel>

                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2">

                        <TextBlock Text="Created Threads" TextAlignment="Center" Margin="5"/>

                        <ListBox Name="ct" Background="LightGray" Height="200" Width="220" ItemsSource="{Binding CreatedThreads}">

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Name}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding AddToWaitingThreadsCommand}" CommandParameter="{Binding ElementName=ct, Path=SelectedItem}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </ListBox>

                    </StackPanel>

                </Grid>

                <DockPanel LastChildFill="False" Margin="3" Grid.Row="1">

                    <StackPanel Orientation="Vertical">

                        <TextBlock Text="Places in Semaphore"/>

                        <StackPanel Orientation="Horizontal">
                            <TextBox Style="{StaticResource MaterialDesignOutlinedTextBox}" Background="Transparent" IsReadOnly="True" TextAlignment="Center" Text="{Binding MaximumSemaphoreValue}" Height="45" Width="200" Margin="0, 5" DockPanel.Dock="Left">

                                <materialDesign:TextFieldAssist.UnderlineBrush>#7D9D9C</materialDesign:TextFieldAssist.UnderlineBrush>
                                <materialDesign:TextFieldAssist.TextFieldCornerRadius>0 0 0 0</materialDesign:TextFieldAssist.TextFieldCornerRadius>

                            </TextBox>

                            <UniformGrid Rows="2" Height="45" Width="20" Margin="0.5, 0, 0, 0">
                                <RepeatButton Content="+" Style="{x:Null}" Background="LightGray" materialDesign:ButtonAssist.CornerRadius="0"  Margin="0, 0, 0, 0.5" Command="{Binding IncrementSemaphoreCountCommand}"/>
                                <RepeatButton Content="-" Style="{x:Null}" Background="LightGray" materialDesign:ButtonAssist.CornerRadius="0" Command="{Binding DecrementSemaphoreCountCommand}"/>
                            </UniformGrid>
                        </StackPanel>

                    </StackPanel>

                    <Button Content="Create New" Height="50" Width="100" Background="Transparent" BorderBrush="#7D9D9C" Command="{Binding CreateThreadCommand}" DockPanel.Dock="Right"/>

                </DockPanel>

            </Grid>

        </Grid>

    </Border>

</Window>
